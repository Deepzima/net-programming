node:
  id: "envoy-node-1"
  cluster: "envoy-cluster"

dynamic_resources:
  ads_config:
    api_type: GRPC
    grpc_services:
      - envoy_grpc:
          cluster_name: control_plane
  lds_config:
    ads: {}
  cds_config:
    ads: {}

static_resources:
  clusters:
    - name: control_plane
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: control_plane
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 50051
      # It is recommended to configure either HTTP/2 or TCP keepalives in order to detect
      # connection issues, and allow Envoy to reconnect. TCP keepalive is less expensive, but
      # may be inadequate if there is a TCP proxy between Envoy and the management server.
      # HTTP/2 keepalive is slightly more expensive, but may detect issues through more types
      # of intermediate proxies.
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options:
              connection_keepalive:
                interval: 30s
                timeout: 5s
      upstream_connection_options:
        tcp_keepalive: {}
admin:
  access_log_path: "/tmp/admin_access.log"
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9901
